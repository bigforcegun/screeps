build = (spawn) ->
  [
    global.CARRY
    global.CARRY
    global.CARRY
    global.CARRY
    global.MOVE
    global.MOVE
    global.MOVE
    global.MOVE
  ]

initialize = (name) ->

sourcesTransferToPriority =
  [
    global.STRUCTURE_EXTENSION,
    global.STRUCTURE_STORAGE,
    global.STRUCTURE_SPAWN,
  ]


findEnergyStorages = ()->
  structures = Game.spawns.Spawn1.room.find(global.FIND_MY_STRUCTURES,
    filter:(structure)->
      return (_.indexOf(sourcesTransferToPriority, structure.structureType) != -1);
  )
  structures

findFullStorages = ()->
  structures = _.filter(findEnergyStorages(),
    (structure)->
      return structure.isFull()
  )
  structures

turn = (creep) ->
  if !creep.isFull()
    storages = findFullStorages()
    unless _.isEmpty(storages)
      storage = storages[0]
      creep.setStage('transferEnergy')
      creep.moveTo storage
      storage.transferEnergy creep
  else
      if creep.room.hasRole('cntr_worker1')
        creep.moveTo(creep.room.controller)
      if creep.pos.inRangeTo(creep.room.controller,2)
        creep.dropEnergy()

module.exports =
  role: 'carrier1'
  group:'carriers'
  build: build
  initialize: initialize
  turn: turn

# ---
# generated by js2coffee 2.1.0