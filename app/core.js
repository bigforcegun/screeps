// Generated by CoffeeScript 1.8.0
module.exports = function() {
  this.initExtend = function() {
    require('spawn')();
    require('creep')();
    require('room')();
    require('game')();
    require('structure')();
    require('source')();
    return require('energy')();
  };
  this.setup = function() {
    return require('setup')();
  };
  this.initStage = function() {
    this.spawner = require('stage_spawners');
    this.spawner.initSpawners();
    this.creeps = require('stage_creeps');
    return this.creeps();
  };
  this.setGlobal = function() {
    return Game.c = this;
  };
  this.initMainLoop = function() {

    /*for name of Game.creeps
      creep = Game.creeps[name]
      if creep.memory.role == 'harvester'
        @harvester creep
      if creep.memory.role == 'builder'
        if creep.carry.energy == 0
          creep.moveTo Game.spawns.Spawn1
          Game.spawns.Spawn1.transferEnergy creep
        else
          targets = creep.room.find(global.FIND_CONSTRUCTION_SITES)
          if targets.length
            creep.moveTo targets[0]
            creep.build targets[0]
      if creep.memory.role == 'guard'
        targets = creep.room.find(global.FIND_HOSTILE_CREEPS)
        if targets.length
          creep.moveTo targets[0]
          creep.attack targets[0]
     */
  };
  this.enableCreep = function(name, flag) {
    if (flag == null) {
      flag = true;
    }
    return Game.creeps[name].setEnabled(flag);
  };
  this.setEnabledByRole = function(role, flag) {
    if (flag == null) {
      flag = true;
    }
    return _.forEach(Game.creepsByRole(role), function(creep) {
      creep.setEnabled(flag);
      return true;
    });
  };
  this.changeRole = (function(_this) {
    return function(roleFrom, roleTo) {
      return _.forEach(Game.creepsByRole(roleFrom), function(creep) {
        creep.memory.role = roleTo;
        return true;
      });
    };
  })(this);
  this.killAll = function() {
    var creep, _i, _len, _ref, _results;
    _ref = Game.creeps;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      creep = _ref[_i];
      _results.push(creep.suicide());
    }
    return _results;
  };
  this.killAllByRole = function(role) {
    var creep, _i, _len, _ref, _results;
    _ref = Game.creepsByRole(role);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      creep = _ref[_i];
      _results.push(creep.suicide());
    }
    return _results;
  };
  return this;
};
